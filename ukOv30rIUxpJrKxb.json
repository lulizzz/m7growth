{
  "active": true,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "uazapi - send auto transcribe3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_video_by_youtube_url": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "perplexity_search": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "perplexity_search1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agente-de-noticias": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-22T12:45:00.387Z",
  "id": "ukOv30rIUxpJrKxb",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "3.1 AI - Group",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "pricingcastai/ia-grupo",
        "authentication": "basicAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -176,
        -112
      ],
      "id": "78401787-ca1a-4a9c-a6f2-40aae190a04d",
      "name": "Webhook",
      "webhookId": "2a0b41d3-ac80-4f37-9f83-71cf324635fa",
      "credentials": {
        "httpBasicAuth": {
          "id": "aYNQrgzWrBYuEXjs",
          "name": "m7 auth"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Dados').item.json.variaveis.message.text.split(\" \")[0].split(\"\\n\")[0] }}",
                    "rightValue": "/pricing",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "f639f54a-15f8-43fa-b014-55ea07096826"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "IA"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        288,
        -112
      ],
      "id": "b63d981e-52c0-4176-a597-c7dbc7e205a7",
      "name": "Switch"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{\n  $json.body\n}}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        64,
        -128
      ],
      "id": "2362fe0f-5cc7-4dde-a79e-0b20b30b0ef0",
      "name": "Dados"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.variaveis.message.text.replaceAll(\"/pricingai \",\"\") }}",
        "options": {
          "systemMessage": "=o usuário perguntará sobre algum material, sobre conteudo de videos... voce deve jogar para o rag uma pergunta que facilite a busca por semelhança.\n\nse voce apresentou uma lista de videos ao usuário, ele pode escolher um deles para pedir um resumo. voce tem que puxar da memória o url do video para procurar esse video na base de dados e procurar pela url usando a tool get video by youtube url.\n\nquando o usuário perguntar por uma informação encontrada da vector store, verificar se temos o url do video no chunk encontrado e procure exatamente usando esse url do video, ou peça para ele.\n\nse voce encontrar um conteudo de video, informe a url do video para o usuário.\n\n\n\n--- sobre noticias ou pesquisas\n\ncaso o usuario pergunte sobre “pílula do dia”, “notícias do dia” ou “/pill”, execute a toll Agente-de-noticias, solicitando apenas as \"noticias do dia\", pois ele já tem um TEMPLATE DEFINITIVO. Para noticias de temas expecificos que ele solicite ou queira pesquisar algo na internet, execute a tool perplexity_search (seria legal você separar por topicos ou noticias usando emojis)"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        672,
        -128
      ],
      "id": "45b966c4-93b1-46fb-81ab-6eb0e1723440",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        400,
        96
      ],
      "id": "82319b5d-feab-496b-b528-a0a8db3ada80",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "eRdScrmNjihgWoFR",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Dados').item.json.grupo.chat_id }}_ai",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        560,
        160
      ],
      "id": "b2fd4ab5-9c03-49f4-87a1-a04cda2f314f",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "busca na base de conhecimento por transcrições de videos do youtube, de audios, imagens e pdf que foram salvas.\n\na query de busca deve conter a pergunta inteira para uma melhor pesquisa",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "topK": 5,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.3,
      "position": [
        1072,
        112
      ],
      "id": "f6197d0a-7acf-4c0a-b0ef-dff1924ae119",
      "name": "Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "6SVrwqEuLHDsNj03",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        1280,
        320
      ],
      "id": "62dfaf61-456f-4361-9f23-0e4c2730ffcf",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "eRdScrmNjihgWoFR",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Dados').first().json.variaveis.instance.host }}/send/text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "token",
              "value": "={{ $('Dados').first().json.variaveis.instance.token }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Dados').first().json.variaveis.chat.chatId }}"
            },
            {
              "name": "text",
              "value": "={{ $json.output }}"
            },
            {
              "name": "linkPreview",
              "value": "={{false}}"
            },
            {
              "name": "readchat",
              "value": "={{ true }}"
            },
            {
              "name": "replyid",
              "value": "={{ $('Dados').first().json.variaveis.message.id }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1344,
        -128
      ],
      "id": "f1a61dfe-ab95-436f-a3bd-13db4eba0424",
      "name": "uazapi - send auto transcribe3",
      "executeOnce": true
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Pode buscar um resumo específico sobre um video pelo seu video url do youtube",
        "operation": "get",
        "tableId": "youtube_videos",
        "filters": {
          "conditions": [
            {
              "keyName": "video_url",
              "keyValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('conditions0_Value', `url completa do video do youtube`, 'string') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        736,
        144
      ],
      "id": "408f2b07-8745-4efd-986e-d801c37daf0e",
      "name": "get_video_by_youtube_url",
      "credentials": {
        "supabaseApi": {
          "id": "6SVrwqEuLHDsNj03",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "model": "sonar-pro",
        "messages": {
          "message": [
            {
              "content": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('message0_Text', ``, 'string') }}"
            }
          ]
        },
        "options": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.perplexityTool",
      "typeVersion": 1,
      "position": [
        1440,
        128
      ],
      "id": "5992f47a-240f-490d-b3fb-2a5d6f84e4ad",
      "name": "perplexity_search",
      "credentials": {
        "perplexityApi": {
          "id": "rj8D6ulmsqxXKUmt",
          "name": "Perplexity account 2"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 8
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -48,
        576
      ],
      "id": "fecd4651-8637-4698-8347-dfb7c72aa4e3",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=busque por noticias do dia anterior relacionados a politica, tecnologia e plantinhas\n\ngere uma resposta abrangendo varias noticias, no minimo 4 de cada topico.\n\ncoloque emojis na mensagem",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        368,
        592
      ],
      "id": "0abd21d9-19db-4745-ae08-645bf024bd96",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        256,
        832
      ],
      "id": "52eb48ea-1b83-4db0-a0d9-264c48163ab4",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "eRdScrmNjihgWoFR",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "model": "sonar-pro",
        "messages": {
          "message": [
            {
              "content": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('message0_Text', ``, 'string') }}"
            }
          ]
        },
        "options": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.perplexityTool",
      "typeVersion": 1,
      "position": [
        688,
        832
      ],
      "id": "8715146c-0dca-4f7a-b1be-2fbb50779527",
      "name": "perplexity_search1",
      "credentials": {
        "perplexityApi": {
          "id": "rj8D6ulmsqxXKUmt",
          "name": "Perplexity account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dba8758a-73be-4cf3-8f60-31b9c14283f9",
              "name": "saida",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        800,
        592
      ],
      "id": "9f773846-3a0f-4a75-8cee-8f9fce488a47",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "description": "chame essa tool sempre que o usuario pedir por noticias e escreva em consulta algo para caso ele tenha pedido um estilo",
        "workflowId": {
          "__rl": true,
          "value": "7hNratdIoQgTyuWY",
          "mode": "list",
          "cachedResultName": "8. Noticias_teste"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "consulta": "={{ $fromAI('consulta', 'tipo de pesquisa que o usuario quer encontrar, se nao tiver digite TODAS AS NOTICIAS', 'string') }}"
          },
          "matchingColumns": [
            "consulta"
          ],
          "schema": [
            {
              "id": "consulta",
              "displayName": "consulta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        944,
        208
      ],
      "id": "e2f26d72-81c1-4e7a-8566-1d538e6d7275",
      "name": "Agente-de-noticias"
    }
  ],
  "origin": "n8n",
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "webhook.m7growth.com",
            "user-agent": "axios/1.8.3",
            "content-length": "937",
            "accept": "application/json,text/html,application/xhtml+xml,application/xml,text/*;q=0.9, image/*;q=0.8, */*;q=0.7",
            "accept-encoding": "gzip, compress, deflate, br",
            "authorization": "Basic cHJpY2luZ2Nhc3RhaTptN3ByaWNpbmc=",
            "content-type": "application/json",
            "x-forwarded-for": "172.18.0.1",
            "x-forwarded-host": "webhook.m7growth.com",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "95a47bff24cf",
            "x-real-ip": "172.18.0.1"
          },
          "params": {},
          "query": {},
          "body": {
            "variaveis": {
              "chat": {
                "chatId": "120363403027713163",
                "groupName": "m7 Testes",
                "isGroup": true
              },
              "user": {
                "whatsapp": "5519994317797",
                "name": "Luiz | Sincron IA"
              },
              "message": {
                "text": "voce tem algum material que fala sobre lovable??",
                "id": "3EB0BEEF2243391403D222",
                "fromMe": false,
                "type": "text",
                "responded": {
                  "whatsapp": null,
                  "text": null,
                  "id": null,
                  "type": null,
                  "mediaurl": null
                },
                "timestamp": "1753206684000",
                "media": {
                  "url": null,
                  "base64": "",
                  "type": "Conversation"
                }
              },
              "instance": {
                "number": "5511988993173",
                "token": "3b334985-ecca-4b04-aa5e-4349741077b5",
                "host": "https://m7growth.uazapi.com"
              },
              "event": {
                "type": "messages",
                "whatsapp": null
              }
            },
            "grupo": {
              "id": 17,
              "chat_id": "120363403027713163",
              "name": "m7 Testes",
              "status": "active",
              "newsletter_enabled": false,
              "auto_transcription_enabled": true,
              "pdf_summary_enabled": true,
              "link_summary_enabled": true,
              "daily_summary_enabled": false,
              "command_transcribe_enabled": false,
              "youtube_auto_transcript_enabled": true
            }
          },
          "webhookUrl": "https://webhook.m7growth.com/webhook/pricingcastai/messaging",
          "executionMode": "production"
        }
      }
    ]
  },
  "repo": {
    "owner": "lulizzz",
    "name": "m7growth"
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 2,
  "updatedAt": "2025-08-07T16:30:12.423Z",
  "versionId": "c1fda72f-5622-4625-a6d1-cdd5bc146cfb"
}